{"version":3,"sources":["components/PhoneItem/PhoneItem.module.css","components/PhoneList/PhoneList.module.css","components/Filter/Filter.module.css","redux/contacts/slice/slice.js","redux/contacts/selectors/selectors.js","components/FormSubmit/FormSubmit.js","components/PhoneItem/PhoneItem.js","components/PhoneList/PhoneList.js","components/Filter/Filter.js","App.js","redux/store.js","index.js","components/FormSubmit/FormSubmit.module.css"],"names":["module","exports","contacts","createSlice","name","initialState","items","id","number","reducers","addContact","state","action","payload","removeContact","filter","filtration","search","filterContacts","_","actions","phoneBook","combineReducers","reducer","selectContactItem","selectFilter","FormSubmit","phone","title","dispatch","useDispatch","listConcacts","useSelector","useState","setName","setNumder","checkContact","find","contact","toLowerCase","className","css","form","onSubmit","e","preventDefault","alert","submitContact","uuidv4","label","description","input","type","pattern","required","value","onChange","target","button","propType","PropTypes","string","PhoneItem","item","text","onClick","CreateContactList","block","list","includes","map","Filter","conteiner","App","contactsPersistConfig","key","storage","store","configureStore","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3c69cba5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneItem_list__1iik-\",\"item\":\"PhoneItem_item__3L4Zd\",\"btn\":\"PhoneItem_btn__17R8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PhoneList_block__x7O0m\",\"title\":\"PhoneList_title__30d5T\",\"list\":\"PhoneList_list__ZfIcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Filter_conteiner__3vEYG\",\"title\":\"Filter_title__3yLyJ\",\"input\":\"Filter_input__33bIl\"};","import { createSlice } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\n\nconst contacts = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n  },\n  reducers: {\n    addContact: (state, action) => ({\n      items: [...state.items, action.payload],\n    }),\n    removeContact: (state, action) => ({\n      items: state.items.filter(({ id }) => id !== action.payload),\n    }),\n  },\n});\n\nconst filtration = createSlice({\n  name: \"filtration\",\n  initialState: {\n    search: \"\",\n  },\n  reducers: {\n    filterContacts: (_, { payload }) => ({\n      search: payload,\n    }),\n  },\n});\n\nexport const { addContact, removeContact } = contacts.actions;\nexport const { filterContacts } = filtration.actions;\n\nexport const phoneBook = combineReducers({\n  contacts: contacts.reducer,\n  filtration: filtration.reducer,\n});\n","export const selectContactItem = (state) => state.phoneBook.contacts.items;\nexport const selectFilter = (state) => state.phoneBook.filtration.search;\n","import PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/slice/slice\";\nimport { selectContactItem } from \"../../redux/contacts/selectors/selectors\";\nimport css from \"../FormSubmit/FormSubmit.module.css\";\n\nfunction FormSubmit({ phone, title }) {\n  const dispatch = useDispatch();\n  const listConcacts = useSelector(selectContactItem);\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumder = (e) => {\n    setNumder(e.target.value);\n  };\n\n  const submitContact = (contact) => {\n    if (!checkContact(contact.name)) {\n      dispatch(addContact(contact));\n    } else {\n      alert(`${contact.name} is alredy in contacts`);\n    }\n  };\n\n  const checkContact = (name) => {\n    return listConcacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    submitContact(contact);\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.description}>{title}</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n\n      <label className={css.label}>\n        <p className={css.description}>{phone}</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumder}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\nFormSubmit.propType = {\n  title: PropTypes.string,\n  phone: PropTypes.string,\n};\n\nexport default FormSubmit;\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { removeContact } from \"../../redux/contacts/slice/slice\";\nimport css from \"../PhoneItem/PhoneItem.module.css\";\n\nfunction PhoneItem({ id, name, number }) {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.item}>\n      <p>{name}</p>: <p className={css.text}>{number}</p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => dispatch(removeContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nPhoneItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default PhoneItem;\n","import PropTypes from \"prop-types\";\nimport PhoneItem from \"../PhoneItem/PhoneItem\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectContactItem,\n  selectFilter,\n} from \"../../redux/contacts/selectors/selectors\";\nimport css from \"../PhoneList/PhoneList.module.css\";\n\nconst CreateContactList = ({ title }) => {\n  const listConcacts = useSelector(selectContactItem);\n  const payload = useSelector(selectFilter);\n\n  const filterContact = () => {\n    return listConcacts.filter(({ name }) =>\n      name.toLowerCase().includes(payload)\n    );\n  };\n\n  return (\n    <section className={css.block}>\n      <h2 className={css.title}>{title}</h2>\n      <ul className={css.list}>\n        {filterContact().map(({ id, name, number }) => (\n          <PhoneItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCreateContactList.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default CreateContactList;\n","import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContacts } from \"../../redux/contacts/slice/slice\";\nimport { selectFilter } from \"../../redux/contacts/selectors/selectors\";\nimport css from \"../Filter/Filter.module.css\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = (e) => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <div className={css.conteiner}>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nFilter.propType = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import \"./App.css\";\nimport FormSubmit from \"./components/FormSubmit/FormSubmit\";\nimport CreateContactList from \"./components/PhoneList/PhoneList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <FormSubmit title={\"Name\"} phone={\"Number\"} />\n      <Filter />\n      <CreateContactList title={\"Contacts\"} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { phoneBook } from \"./contacts/slice/slice\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage: storage,\n};\n\nexport const store = configureStore({\n  reducer: {\n    phoneBook: persistReducer(contactsPersistConfig, phoneBook),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormSubmit_form__UAFu_\",\"label\":\"FormSubmit_label__3eEdz\",\"description\":\"FormSubmit_description__2I2dc\",\"input\":\"FormSubmit_input__2QGEB\",\"button\":\"FormSubmit_button__3YEYo\"};"],"sourceRoot":""}