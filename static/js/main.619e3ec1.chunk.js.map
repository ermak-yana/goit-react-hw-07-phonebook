{"version":3,"sources":["components/PhoneItem/PhoneItem.module.css","components/PhoneList/PhoneList.module.css","components/Filter/Filter.module.css","redux/contacts/selectors/selectors.js","redux/contacts/slice/slice.js","components/FormSubmit/FormSubmit.js","redux/contacts/AsyncOperation/asyncOperation.js","components/PhoneItem/PhoneItem.js","components/PhoneList/PhoneList.js","components/Filter/Filter.js","App.js","redux/store.js","index.js","components/FormSubmit/FormSubmit.module.css"],"names":["module","exports","selectContactItem","state","phoneBook","contacts","items","selectFilter","filtration","search","createSlice","name","initialState","isLoading","error","reducers","fetchContact","fetchContactResolve","action","payload","fetchContactReject","fetchAddContact","fetchAddContactResolve","fetchAddContactReject","fetchRemoveContact","fetchRemoveContactResolve","filter","id","fetchRemoveContactReject","filterContacts","_","actions","combineReducers","reducer","FormSubmit","phone","title","dispatch","useDispatch","listConcacts","useSelector","useState","setName","number","setNumder","submitContact","contact","checkContact","alert","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","message","addContactAsync","find","toLowerCase","className","css","form","onSubmit","e","preventDefault","label","description","input","type","pattern","required","value","onChange","target","button","propType","PropTypes","string","PhoneItem","removeContact","removeContactAsync","item","text","onClick","CreateContactList","useEffect","block","list","includes","map","Filter","conteiner","App","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.619e3ec1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneItem_list__1iik-\",\"item\":\"PhoneItem_item__3L4Zd\",\"btn\":\"PhoneItem_btn__17R8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"PhoneList_block__x7O0m\",\"title\":\"PhoneList_title__30d5T\",\"list\":\"PhoneList_list__ZfIcf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Filter_conteiner__3vEYG\",\"title\":\"Filter_title__3yLyJ\",\"input\":\"Filter_input__33bIl\"};","export const selectContactItem = (state) => state.phoneBook.contacts.items;\nexport const selectFilter = (state) => state.phoneBook.filtration.search;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\n\nconst contacts = createSlice({\n  name: \"contacts\",\n  initialState: {\n    isLoading: false,\n    items: [],\n    error: null,\n  },\n  reducers: {\n    fetchContact: (state) => ({\n      ...state,\n      isLoading: true,\n    }),\n    fetchContactResolve: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: action.payload,\n    }),\n    fetchContactReject: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: [],\n      error: action.payload,\n    }),\n\n    fetchAddContact: (state) => ({\n      ...state,\n      isLoading: true,\n    }),\n    fetchAddContactResolve: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: [...state.items, action.payload],\n    }),\n    fetchAddContactReject: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: [],\n      error: action.payload,\n    }),\n\n    fetchRemoveContact: (state) => ({\n      ...state,\n      isLoading: true,\n    }),\n    fetchRemoveContactResolve: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: state.items.filter(({ id }) => id !== action.payload),\n    }),\n    fetchRemoveContactReject: (state, action) => ({\n      ...state,\n      isLoading: false,\n      items: [],\n      error: action.payload,\n    }),\n  },\n});\n\nconst filtration = createSlice({\n  name: \"filtration\",\n  initialState: {\n    search: \"\",\n  },\n  reducers: {\n    filterContacts: (_, { payload }) => ({\n      search: payload,\n    }),\n  },\n});\n\nexport const {\n  fetchContact,\n  fetchContactResolve,\n  fetchContactReject,\n  fetchAddContact,\n  fetchAddContactResolve,\n  fetchAddContactReject,\n  fetchRemoveContact,\n  fetchRemoveContactResolve,\n  fetchRemoveContactReject,\n} = contacts.actions;\nexport const { filterContacts } = filtration.actions;\n\nexport const phoneBook = combineReducers({\n  contacts: contacts.reducer,\n  filtration: filtration.reducer,\n});\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContactItem } from \"../../redux/contacts/selectors/selectors\";\nimport { addContactAsync } from \"../../redux/contacts/AsyncOperation/asyncOperation\";\nimport css from \"../FormSubmit/FormSubmit.module.css\";\n\nfunction FormSubmit({ phone, title }) {\n  const dispatch = useDispatch();\n  const listConcacts = useSelector(selectContactItem);\n  const [name, setName] = useState(\"\");\n  const [number, setNumder] = useState(\"\");\n\n  const handleChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumder = (e) => {\n    setNumder(e.target.value);\n  };\n\n  const submitContact = (contact) => {\n    if (!checkContact(contact.name)) {\n      dispatch(addContactAsync(contact));\n    } else {\n      alert(`${contact.name} is alredy in contacts`);\n    }\n  };\n\n  const checkContact = (name) => {\n    return listConcacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    submitContact(contact);\n    setName(\"\");\n    setNumder(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.description}>{title}</p>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n\n      <label className={css.label}>\n        <p className={css.description}>{phone}</p>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumder}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n\nFormSubmit.propType = {\n  title: PropTypes.string,\n  phone: PropTypes.string,\n};\n\nexport default FormSubmit;\n","import {\r\n  fetchContact,\r\n  fetchContactResolve,\r\n  fetchContactReject,\r\n  fetchAddContact,\r\n  fetchAddContactResolve,\r\n  fetchAddContactReject,\r\n  fetchRemoveContact,\r\n  fetchRemoveContactResolve,\r\n  fetchRemoveContactReject,\r\n} from \"../slice/slice\";\r\n\r\nexport const getPhoneContact = () => async (dispatch) => {\r\n  dispatch(fetchContact());\r\n  try {\r\n    await fetch(`http://localhost:3000/contacts`)\r\n      .then((response) => response.json())\r\n      .then((response) => dispatch(fetchContactResolve(response)));\r\n  } catch (error) {\r\n    dispatch(fetchContactReject(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactAsync = (contact) => async (dispatch) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(contact),\r\n  };\r\n  dispatch(fetchAddContact());\r\n  try {\r\n    const data = await fetch(\r\n      `http://localhost:3000/contacts`,\r\n      requestOptions\r\n    ).then((response) => response.json());\r\n    dispatch(fetchAddContactResolve(data));\r\n  } catch (error) {\r\n    dispatch(fetchAddContactReject(error.message));\r\n  }\r\n};\r\n\r\nexport const removeContactAsync = (id) => async (dispatch) => {\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n  };\r\n  dispatch(fetchRemoveContact());\r\n  try {\r\n    await fetch(`http://localhost:3000/contacts/${id}`, requestOptions).then(\r\n      (response) => response.json()\r\n    );\r\n    dispatch(fetchRemoveContactResolve(id));\r\n  } catch (error) {\r\n    dispatch(fetchRemoveContactReject(error.message));\r\n  }\r\n};\r\n","import PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { removeContactAsync } from \"../../redux/contacts/AsyncOperation/asyncOperation\";\nimport css from \"../PhoneItem/PhoneItem.module.css\";\n\nfunction PhoneItem({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const removeContact = (id) => {\n    dispatch(removeContactAsync(id));\n  };\n\n  return (\n    <li className={css.item}>\n      <p>{name}</p>: <p className={css.text}>{number}</p>\n      <button\n        className={css.button}\n        type=\"button\"\n        onClick={() => removeContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nPhoneItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default PhoneItem;\n","import PropTypes from \"prop-types\";\nimport PhoneItem from \"../PhoneItem/PhoneItem\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectContactItem,\n  selectFilter,\n} from \"../../redux/contacts/selectors/selectors\";\nimport { getPhoneContact } from \"../../redux/contacts/AsyncOperation/asyncOperation\";\nimport css from \"../PhoneList/PhoneList.module.css\";\nimport { useEffect } from \"react\";\n\nconst CreateContactList = ({ title }) => {\n  const dispatch = useDispatch();\n  const listConcacts = useSelector(selectContactItem);\n  const payload = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(getPhoneContact());\n  }, [dispatch]);\n\n  const filterContact = () => {\n    return listConcacts.filter(({ name }) =>\n      name.toLowerCase().includes(payload)\n    );\n  };\n\n  return (\n    <section className={css.block}>\n      <h2 className={css.title}>{title}</h2>\n      <ul className={css.list}>\n        {filterContact().map(({ id, name, number }) => (\n          <PhoneItem key={id} id={id} name={name} number={number} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCreateContactList.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default CreateContactList;\n","import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContacts } from \"../../redux/contacts/slice/slice\";\nimport { selectFilter } from \"../../redux/contacts/selectors/selectors\";\nimport css from \"../Filter/Filter.module.css\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = (e) => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <div className={css.conteiner}>\n      <h3 className={css.title}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nFilter.propType = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import \"./App.css\";\nimport FormSubmit from \"./components/FormSubmit/FormSubmit\";\nimport CreateContactList from \"./components/PhoneList/PhoneList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <FormSubmit title={\"Name\"} phone={\"Number\"} />\n      <Filter />\n      <CreateContactList title={\"Contacts\"} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { phoneBook } from \"../redux/contacts/slice/slice\";\n\nexport const store = configureStore({\n  reducer: {\n    phoneBook: phoneBook,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormSubmit_form__UAFu_\",\"label\":\"FormSubmit_label__3eEdz\",\"description\":\"FormSubmit_description__2I2dc\",\"input\":\"FormSubmit_input__2QGEB\",\"button\":\"FormSubmit_button__3YEYo\"};"],"sourceRoot":""}